/**
 * Flowtype definitions for parse
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.13.0
 * @flow
 */

import typeof { InvalidDataReason } from "../errors/index";
import type {
  _Uint64_bigint,
  _Uint64_num,
  FixlenHexString,
  HexString,
  Uint8_t,
  Uint16_t,
  Uint32_t,
  Uint64_str,
  ValidBIP32Path,
  VarlenAsciiString,
} from "../types/internal";
declare export var MAX_UINT_64_STR: "18446744073709551615";
declare export var isString: (data: mixed) => boolean;
declare export var isInteger: (data: mixed) => boolean;
declare export var isArray: (data: mixed) => boolean;
declare export var isBuffer: (data: mixed) => boolean;
declare export var isUint32: (data: mixed) => boolean;
declare export var isUint16: (data: mixed) => boolean;
declare export var isUint8: (data: mixed) => boolean;
declare export var isHexString: (data: mixed) => boolean;
declare export var isHexStringOfLength: <L: number>(
  data: mixed,
  expectedByteLength: L
) => boolean;
declare export var isValidPath: (data: mixed) => boolean;
declare export var isUint64str: (data: mixed) => boolean;
declare export var isUint64Number: (data: mixed) => boolean;
declare export var isUint64Bigint: (data: mixed) => boolean;
declare export var isUintStr: (
  data: mixed,
  constraints: {|
    min?: string,
    max?: string,
  |}
) => boolean;
declare export function validate(
  cond: boolean,
  errMsg: $Values<InvalidDataReason>
): boolean;
declare export function parseAscii(
  str: mixed,
  errMsg: $Values<InvalidDataReason>
): VarlenAsciiString;
declare export function parseHexString(
  str: mixed,
  errMsg: $Values<InvalidDataReason>
): HexString;
declare export function parseHexStringOfLength<L: number>(
  str: mixed,
  length: L,
  errMsg: $Values<InvalidDataReason>
): FixlenHexString<L>;
declare export function parseUint64_str(
  val: mixed,
  constraints: {|
    min?: string,
    max?: string,
  |},
  errMsg: $Values<InvalidDataReason>
): Uint64_str;
declare export function parseUint32_t(
  value: mixed,
  errMsg: $Values<InvalidDataReason>
): Uint32_t;
declare export function parseUint16_t(
  value: mixed,
  errMsg: $Values<InvalidDataReason>
): Uint16_t;
declare export function parseUint8_t(
  value: number,
  errMsg: $Values<InvalidDataReason>
): Uint8_t;
declare export function parseBIP32Path(
  value: mixed,
  errMsg: $Values<InvalidDataReason>
): ValidBIP32Path;
declare export function parseIntFromStr(
  str: string,
  errMsg: $Values<InvalidDataReason>
): number;
